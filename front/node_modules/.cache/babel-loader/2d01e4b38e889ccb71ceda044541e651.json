{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xisca\\\\OneDrive\\\\Documentos\\\\ifc33B\\\\restaurat\\\\src\\\\Components\\\\Map.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { TileLayer, Marker, MapContainer, Popup, CircleMarker, Tooltip } from 'react-leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coordenades: []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'http://localhost/projecte/readCoordenades.php';\n    axios.post(url).then(response => response.data).then(data => {\n      this.setState({\n        coordenades: data\n      });\n      console.log(this.state.coordenades);\n    });\n  }\n\n  render() {\n    const position = [this.props.lat, this.props.lng];\n    return /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: this.props.zoom,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), this.state.coordenadesmap(city => {\n        return /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [city[\"coordinates\"][1], city[\"coordinates\"][0]],\n          radius: 20 * Math.log(city[\"population\"] / 10000000),\n          fillOpacity: 0.5,\n          stroke: false,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            direction: \"left\",\n            offset: [-8, -2],\n            opacity: 1,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: city['name'] + ': ' + 'Population' + ' ' + city['population']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n    /*render() {\r\n        const position = [39.60017583077754, 2.9943578633572976]\r\n        return (\r\n                <MapContainer center={position} zoom={9}>\r\n                    <TileLayer\r\n                       attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                       url='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n                    />\r\n                    {this.state.coordenades.map((c) => {\r\n                            return (\r\n                                <Marker\r\n                                    position={[c.lat, c.lng]}\r\n                                >\r\n                                    <Popup >\r\n                                        {c.nom}\r\n                                    </Popup>\r\n                                </Marker>\r\n                            )\r\n                        })\r\n                    }\r\n                </MapContainer>\r\n        );\r\n    }*/\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/xisca/OneDrive/Documentos/ifc33B/restaurat/src/Components/Map.js"],"names":["React","Component","axios","TileLayer","Marker","MapContainer","Popup","CircleMarker","Tooltip","Map","state","coordenades","componentDidMount","url","post","then","response","data","setState","console","log","render","position","props","lat","lng","zoom","coordenadesmap","city","Math","k"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,YAA5B,EAA0CC,KAA1C,EAAiDC,YAAjD,EAA+DC,OAA/D,QAA8E,eAA9E;AACA,OAAO,0BAAP;;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACC,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BS,KAD8B,GACtB;AACJC,MAAAA,WAAW,EAAE;AADT,KADsB;AAAA;;AAK9BC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,GAAG,GAAG,+CAAZ;AACAX,IAAAA,KAAK,CAACY,IAAN,CAAWD,GAAX,EAAgBE,IAAhB,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,IAA1C,EACKF,IADL,CACWE,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEM;AAAf,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,WAAvB;AACH,KAJL;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,CAAC,KAAKC,KAAL,CAAWC,GAAZ,EAAiB,KAAKD,KAAL,CAAWE,GAA5B,CAAjB;AACA,wBACI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEH,QAAtB;AAAgC,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWG,IAAjD;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,WAAW,EAAC,2EADhB;AAEI,QAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,EAMQ,KAAKhB,KAAL,CAAWiB,cAAX,CAA2BC,IAAD,IAAU;AAChC,4BACI,QAAC,YAAD;AAEI,UAAA,MAAM,EAAE,CAACA,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,CAAD,EAAyBA,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,CAAzB,CAFZ;AAGI,UAAA,MAAM,EAAE,KAAKC,IAAI,CAACT,GAAL,CAASQ,IAAI,CAAC,YAAD,CAAJ,GAAqB,QAA9B,CAHjB;AAII,UAAA,WAAW,EAAE,GAJjB;AAKI,UAAA,MAAM,EAAE,KALZ;AAAA,iCAOI,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,MAAnB;AAA0B,YAAA,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAlC;AAA4C,YAAA,OAAO,EAAE,CAArD;AAAA,mCACI;AAAA,wBAAOA,IAAI,CAAC,MAAD,CAAJ,GAAe,IAAf,GAAsB,YAAtB,GAAqC,GAArC,GAA2CA,IAAI,CAAC,YAAD;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAPJ,WACSE,CADT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAaH,OAdD,CANR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;AAjE6B;;AAoElC,eAAerB,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { TileLayer, Marker, MapContainer, Popup, CircleMarker, Tooltip } from 'react-leaflet'\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\n\r\nclass Map extends React.Component {\r\n    state = {\r\n        coordenades: [],\r\n\r\n    }\r\n    componentDidMount() {\r\n        const url = 'http://localhost/projecte/readCoordenades.php';\r\n        axios.post(url).then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({ coordenades: data })\r\n                console.log(this.state.coordenades)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const position = [this.props.lat, this.props.lng]\r\n        return (\r\n            <MapContainer center={position} zoom={this.props.zoom}>\r\n                <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {\r\n                    this.state.coordenadesmap((city) => {\r\n                        return (\r\n                            <CircleMarker\r\n                                key={k}\r\n                                center={[city[\"coordinates\"][1], city[\"coordinates\"][0]]}\r\n                                radius={20 * Math.log(city[\"population\"] / 10000000)}\r\n                                fillOpacity={0.5}\r\n                                stroke={false}\r\n                            >\r\n                                <Tooltip direction=\"left\" offset={[-8, -2]} opacity={1}>\r\n                                    <span>{city['name'] + ': ' + 'Population' + ' ' + city['population']}</span>\r\n                                </Tooltip>\r\n                            </CircleMarker>\r\n                        )\r\n                    })\r\n                }\r\n            </MapContainer>\r\n        );\r\n        /*render() {\r\n            const position = [39.60017583077754, 2.9943578633572976]\r\n            return (\r\n                    <MapContainer center={position} zoom={9}>\r\n                        <TileLayer\r\n                           attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                           url='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n                        />\r\n                        {this.state.coordenades.map((c) => {\r\n                                return (\r\n                                    <Marker\r\n                                        position={[c.lat, c.lng]}\r\n                                    >\r\n                                        <Popup >\r\n                                            {c.nom}\r\n                                        </Popup>\r\n                                    </Marker>\r\n                                )\r\n                            })\r\n                        }\r\n                    </MapContainer>\r\n            );\r\n        }*/\r\n\r\n    }\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}